{
"version":3,
"file":"compile/github.js",
"lineCount":17,
"mappings":"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",
"sources":["node_modules/https/index.js","node_modules/http/index.js","node_modules/util/index.js","node_modules/erotic/src/lib.js","node_modules/os/index.js","node_modules/@artdeco/clean-stack/src/index.js","node_modules/erotic/src/callback.js","node_modules/erotic/src/index.js","node_modules/url/index.js","node_modules/stream/index.js","node_modules/catchment/src/lib/index.js","node_modules/catchment/src/index.js","node_modules/zlib/index.js","node_modules/@rqt/aqt/src/lib/make-request.js","node_modules/@rqt/aqt/src/lib/index.js","node_modules/@rqt/aqt/src/index.js","node_modules/rqt/src/lib/index.js","node_modules/querystring/index.js","src/finish.js","src/index.js","src/depack.js"],
"sourcesContent":["export default https\nexport const {\n  Agent,\n  Server,\n  createServer,\n  get,\n  globalAgent,\n  request,\n} = https","export default http\nexport const {\n  Agent,\n  ClientRequest,\n  IncomingMessage,\n  METHODS,\n  OutgoingMessage,\n  STATUS_CODES,\n  Server,\n  ServerResponse,\n  createServer,\n  get,\n  globalAgent,\n  maxHeaderSize,\n  request,\n} = http","export default util\nexport const {\n  TextDecoder,\n  TextEncoder,\n  callbackify,\n  debug,\n  debuglog,\n  deprecate,\n  error,\n  format,\n  getSystemErrorName,\n  inherits,\n  inspect,\n  isArray,\n  isBoolean,\n  isBuffer,\n  isDate,\n  isError,\n  isFunction,\n  isNull,\n  isNullOrUndefined,\n  isNumber,\n  isObject,\n  isPrimitive,\n  isRegExp,\n  isString,\n  isSymbol,\n  isUndefined,\n  log,\n  print,\n  promisify,\n  puts,\n} = util","const getLastItem = (array) => {\n  const item = array[array.length - 1]\n  return item\n}\nconst getItemsFrom = (array, from) => array.slice(from)\n\n/**\n * Get a segment of the stack string, defaults are from = 0 and oneLine = false.\n * @param {string} stack the stack string\n * @param {number} [from=0] index from which to slice from\n * @param {boolean} [oneLine=false] Whether just first line must be returned\n * @returns {string} A stack segment starting from the specified line.\n */\nexport const getStackSegment = (stack, from = 0, oneLine = false) => {\n  if (from === 0 && !oneLine) {\n    return stack\n  }\n  const splitStack = stack\n    .split('\\n', oneLine ? from + 1 : undefined)\n  if (oneLine) {\n    const line = getLastItem(splitStack)\n    return line\n  } else {\n    const items = getItemsFrom(splitStack, from)\n    return items.join('\\n')\n  }\n}\n\n/**\n * Get the stack trace part of when the erotic function was called. Disregards\n * first two lines.\n * @param {string} stack error's stack\n * @param {boolean} [transparent] trim the top line as well\n * @returns {string} A part of stack\n */\nexport const getEntryStack = (stack, transparent = false) => {\n  const stackSegment = getStackSegment(stack, 2 + (transparent ? 1 : 0))\n  return stackSegment\n}\n\n/**\n * Get stack line of where the callback was called.\n * @param {string} stack Stack string.\n * @returns {string} Stack line.\n */\nexport const getCalleeStackLine = (stack) => {\n  const calleeStackLine = getStackSegment(stack, 2, true)\n  return calleeStackLine\n}\n\nexport const getStackHeading = message => `Error: ${message}`\n\n/**\n * Extract caller from the function's `arguments`.\n * @param {Object} args arguments\n * @returns {!Function} The caller function from `arguments.callee.caller`.\n */\nexport const getCallerFromArguments = (args) => {\n  const { callee: { caller } } = args\n  return caller\n}","export default os\nexport const {\n  EOL,\n  arch,\n  constants,\n  cpus,\n  endianness,\n  freemem,\n  homedir,\n  hostname,\n  loadavg,\n  networkInterfaces,\n  platform,\n  release,\n  tmpdir,\n  totalmem,\n  type,\n  uptime,\n  userInfo,\n} = os","import { homedir } from 'os'\n\nconst extractPathRegex = /\\s+at.*(?:\\(|\\s)(.*)\\)?/\nconst pathRegex = /^(?:(?:(?:node|(?:internal\\/[\\w/]*|.*node_modules\\/(?:IGNORED_MODULES)\\/.*)?\\w+)\\.js:\\d+:\\d+)|native)/\n\nconst homeDir = homedir()\n\n/**\n * Remove internal Node.JS lines from the error stack traces.\n * @param {string} stack The error stack to update.\n * @param {!_cleanStack.Config} [options] Options for the program.\n * @param {boolean} [options.pretty=false] Replace the absolute path to the home directory with the `~`. Default `false`.\n * @param {!Array<string>} [options.ignoredModules=\"\uff3b'pirates'\uff3d\"] Which modules to ignore in the path. Default `\uff3b'pirates'\uff3d`.\n */\nconst cleanStack = (stack, options) => {\n  const {\n    pretty = false, ignoredModules = ['pirates'],\n  } = options || {}\n  const j = ignoredModules.join('|')\n  const re = new RegExp(pathRegex.source.replace('IGNORED_MODULES', j))\n\n  return stack.replace(/\\\\/g, '/')\n    .split('\\n')\n    .filter(x => {\n      const pathMatches = x.match(extractPathRegex)\n      if (pathMatches === null || !pathMatches[1]) {\n        return true\n      }\n\n      const match = pathMatches[1]\n\n      // Electron\n      if (match.includes('.app/Contents/Resources/electron.asar') ||\n        match.includes('.app/Contents/Resources/default_app.asar')) {\n        return false\n      }\n\n      return !re.test(match)\n    })\n    .filter(x => x.trim())\n    .map(x => {\n      if (pretty) {\n        return x.replace(extractPathRegex, (m, p1) => m.replace(p1, p1.replace(homeDir, '~')))\n      }\n\n      return x\n    })\n    .join('\\n')\n}\n\nexport default cleanStack\n\n/* documentary types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_cleanStack.Config} Config Options for the program.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _cleanStack.Config Options for the program.\n * @prop {boolean} [pretty=false] Replace the absolute path to the home directory with the `~`. Default `false`.\n * @prop {!Array<string>} [ignoredModules=\"\uff3b'pirates'\uff3d\"] Which modules to ignore in the path. Default `\uff3b'pirates'\uff3d`.\n */\n","import cleanStack from '@artdeco/clean-stack'\nimport {\n  getCallerFromArguments, getCalleeStackLine, getStackHeading,\n} from './lib'\n\n/**\n * Create a callback.\n * @param {!Function} entryCaller The function which was called at entry.\n * @param {string} entryStack The first line of the error stack to be returned\n * @param {boolean} [shadow=false] Print only entry stack.\n */\nexport function makeCallback(entryCaller, entryStack, shadow = false) {\n  /**\n   * This callback should be called when an asynchronous error occurred.\n   * @param {(string|Error)} messageOrError A message string or an _Error_ object at the point of actual error.\n   * @returns {Error} An error with the updated stack which includes the callee.\n   */\n  function cb(messageOrError) {\n    const caller = getCallerFromArguments(arguments)\n    const { stack: errorStack } = new Error()\n    const calleeStackLine = getCalleeStackLine(errorStack)\n    const isError = messageOrError instanceof Error\n    const message = isError ? messageOrError.message : messageOrError\n\n    const stackHeading = getStackHeading(message)\n    const entryHasCallee = caller !== null && entryCaller === caller\n    const stackMessage = [\n      stackHeading,\n      ...(entryHasCallee || shadow ? [entryStack] : [\n        calleeStackLine,\n        entryStack,\n      ]),\n    ].join('\\n')\n\n    const stack = cleanStack(stackMessage)\n    const properties = { message, stack }\n    const e = isError ? messageOrError : new Error()\n\n    return /** @type {Error} */ (Object.assign(/** @type {!Object} */ (e), properties))\n  }\n\n  return cb\n}","import {\n  getEntryStack, getCallerFromArguments,\n} from './lib'\nimport { makeCallback } from './callback'\n\n/**\n * Returns a function to create an error with a stack trace starting at the line in code when the call was made by the callee.\n * @param {boolean} [transparent] Pretend as if the call to the function lead to the error, without exposing any of the internal stack.\n */\nexport default function erotic(transparent) {\n  const { stack } = new Error()\n  const caller = getCallerFromArguments(arguments)\n  const entryStack = getEntryStack(stack, transparent)\n\n  return makeCallback(caller, entryStack, transparent)\n}","export default url\nexport const {\n  URL,\n  URLSearchParams,\n  Url,\n  domainToASCII,\n  domainToUnicode,\n  format,\n  parse,\n  resolve,\n} = url","export default stream\nexport const {\n  Duplex,\n  PassThrough,\n  Readable,\n  Stream,\n  Transform,\n  Writable,\n} = stream","/**\n * Listens for the `error` event once so that when an error in _streamB_ is emitted, is is also emitted in the _streamA_.\n * @param {stream.Stream} streamA The stream that will emit an error once it's caught in the `streamB`.\n * @param {stream.Stream} streamB The stream from which the error originates.\n * @returns The stream the error is listened on, i.e., transparent to calling the `.once` method on that stream.\n */\nexport const pipeError = (streamA, streamB) => {\n  streamB\n    .once('error', e => {\n      streamA.emit('error', e)\n    })\n  return streamB\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('stream').Stream} stream.Stream\n */","import { Writable } from 'stream'\nimport erotic from 'erotic'\nimport cleanStack from '@artdeco/clean-stack'\nimport { pipeError } from './lib'\n\nfunction joinBufferData(array) {\n  return array.join('')\n}\n\n/**\n * A writable stream which collects incoming data into memory, and provides a promise to way for the stream to finish. The promise is resolved with joined chunks.\n */\nexport default class Catchment extends Writable {\n  /**\n   * Create a new catchment to pipe a readable stream into and collect all emitted data.\n   * @param {!_catchment.Options} [options] Options to pass to the `Writable` super constructor, and others shown below.\n   * @param {!stream.Readable} [options.rs] A readable stream to automatically pipe into the catchment. If an error occurs during reading of this stream, the catchment promise will be rejected with it.\n   * @param {boolean} [options.binary=false] Whether to return a raw buffer instead of a string. The string is created by joining all incoming chunks together with `.join('')` method. Default `false`.\n   * @example\n   *\n   * import { createReadStream } from 'fs'\n   * import Catchment from 'catchment'\n   *\n   * const rs = createReadStream('file.txt')\n   * const { promise } = new Catchment({ rs })\n   * const res = await promise\n   */\n  constructor(options) {\n    const {\n      binary = false, rs = null, ...opts\n    } = options || {}\n    /** @suppress {missingProperties} */\n    const { er = erotic(true), proxyError } = options || {}\n    const wrap = (_, e) => er(e)\n    super(/** @type {!stream.WritableOptions} */ (opts))\n    this._caughtData = []\n    this._promise = new Promise((r, j) => {\n      this.on('finish', () => {\n        let d\n        if (binary) {\n          d = Buffer.concat(this._caughtData)\n        } else {\n          d = joinBufferData(this._caughtData)\n        }\n        r(d)\n        this._caughtData = []\n      })\n      this.once('error', (e) => {\n        if (e.stack.indexOf('\\n') == -1) {\n          wrap`${e}`\n          j(e)\n        } else {\n          const stack = cleanStack(e.stack)\n          e.stack = stack\n          if (proxyError) wrap`${e}`\n          j(e)\n        }\n      })\n      if (rs) {\n        pipeError(this, rs).pipe(this)\n      }\n    })\n  }\n  _write(chunk, encoding, callback) {\n    this._caughtData.push(chunk)\n    callback()\n  }\n  /**\n   * A promise which will resolve will all data when the stream finishes.\n   * @type {Promise<string|Buffer>}\n   */\n  get promise() {\n    return this._promise\n  }\n}\n\n/**\n * Collect data into a catchment, and return results when the stream finishes.\n * @param {stream.Readable} readable A readable stream to collect all data from. If an error occurs during reading of this stream, the promise will be rejected with it.\n * @param {_catchment.CollectOptions} options Options when collecting data into a catchment. They can extend `Writable` options which will be passed to the `Catchment` constructor.\n * @param {boolean} [options.binary=false] Whether to return a raw buffer instead of a string. The string is created by joining all incoming chunks together with `.join('')` method. Default `false`.\n * @param {boolean} [options.proxyError=false] Sets whether an error emitted by the stream with have its stack start at the line where the `collect` was called rather than inside of the stream. In other words, hides the implementation of the stream. Default `false`.\n * @example\n *\n * import { collect } from 'catchment'\n * import { createReadStream } from 'fs'\n *\n * const rs = createReadStream(path)\n * await collect(rs, { proxyError: true })\n */\nexport const collect = async (readable, options = {}) => {\n  const { promise } = new Catchment({\n    rs: readable,\n    ...options,\n    er: erotic(true),\n  })\n  const res = await promise\n  return res\n}\n\n/* typal types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_catchment.Options} Options Options to pass to the `Writable` super constructor, and others shown below.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _catchment.Options Options to pass to the `Writable` super constructor, and others shown below.\n * @prop {!stream.Readable} [rs] A readable stream to automatically pipe into the catchment. If an error occurs during reading of this stream, the catchment promise will be rejected with it.\n * @prop {boolean} [binary=false] Whether to return a raw buffer instead of a string. The string is created by joining all incoming chunks together with `.join('')` method. Default `false`.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('stream').Readable} stream.Readable\n */\n\n/* typal types/collect.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_catchment.CollectOptions} CollectOptions Options when collecting data into a catchment. They can extend `Writable` options which will be passed to the `Catchment` constructor.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _catchment.CollectOptions Options when collecting data into a catchment. They can extend `Writable` options which will be passed to the `Catchment` constructor.\n * @prop {boolean} [binary=false] Whether to return a raw buffer instead of a string. The string is created by joining all incoming chunks together with `.join('')` method. Default `false`.\n * @prop {boolean} [proxyError=false] Sets whether an error emitted by the stream with have its stack start at the line where the `collect` was called rather than inside of the stream. In other words, hides the implementation of the stream. Default `false`.\n */\n","export default zlib\nexport const {\n  Deflate,\n  DeflateRaw,\n  Gunzip,\n  Gzip,\n  Inflate,\n  InflateRaw,\n  Unzip,\n  Z_BEST_COMPRESSION,\n  Z_BEST_SPEED,\n  Z_BLOCK,\n  Z_BUF_ERROR,\n  Z_DATA_ERROR,\n  Z_DEFAULT_COMPRESSION,\n  Z_DEFAULT_STRATEGY,\n  Z_ERRNO,\n  Z_FILTERED,\n  Z_FINISH,\n  Z_FIXED,\n  Z_FULL_FLUSH,\n  Z_HUFFMAN_ONLY,\n  Z_MEM_ERROR,\n  Z_NEED_DICT,\n  Z_NO_COMPRESSION,\n  Z_NO_FLUSH,\n  Z_OK,\n  Z_PARTIAL_FLUSH,\n  Z_RLE,\n  Z_STREAM_END,\n  Z_STREAM_ERROR,\n  Z_SYNC_FLUSH,\n  Z_VERSION_ERROR,\n  constants,\n  createDeflate,\n  createDeflateRaw,\n  createGunzip,\n  createGzip,\n  createInflate,\n  createInflateRaw,\n  createUnzip,\n  deflate,\n  deflateRaw,\n  deflateRawSync,\n  deflateSync,\n  gunzip,\n  gunzipSync,\n  gzip,\n  gzipSync,\n  inflate,\n  inflateRaw,\n  inflateRawSync,\n  inflateSync,\n  unzip,\n  unzipSync,\n} = zlib","import erotic from 'erotic'\nimport { collect } from 'catchment'\nimport { createGunzip } from 'zlib'\nimport { request as Request } from 'http' // eslint-disable-line\n\n/**\n * @param {!http.IncomingMessage} res\n */\nexport const isMessageGzip = (res) => {\n  /**\n   * @suppress {checkTypes}\n   */\n  const contentEncoding = res.headers['content-encoding']\n  return contentEncoding == 'gzip'\n}\n\n/**\n * @param {typeof Request} request The actual http or https request function.\n * @param {!http.RequestOptions} requestOptions\n * @param {!Object} [config] Config object.\n * @param {boolean} [config.justHeaders] only return headers as soon as available. false\n * @param {boolean} [config.binary] return binary\n * @param {boolean} [config.er] erotic callback\n */\nconst makeRequest = (request, requestOptions, config = {}) => {\n  const { justHeaders, binary, er = erotic(true) } = config\n  /** @type {!http.ClientRequest} */\n  let req\n\n  /** @type {!http.IncomingHttpHeaders} */\n  let headers\n  /** @type {{statusMessage: string, statusCode: number}} */\n  let m\n  /** @type {string|!Buffer} */\n  let body\n  let rawLength = 0\n  let byteLength = 0\n\n  const promise = new Promise((r, j) => {\n    req = request(requestOptions, async (res) => {\n      ({ headers } = res)\n      const { statusMessage, statusCode } = res\n      m = { statusMessage, statusCode }\n      if (justHeaders) {\n        res.destroy()\n        r()\n        return\n      }\n      const isGzip = isMessageGzip(res)\n\n      res.on('data', data => rawLength += data.byteLength )\n\n      const rs = isGzip\n        ? res.pipe(createGunzip())\n        : res\n\n      body = await collect(rs, { binary })\n      byteLength = body.length\n\n      r()\n    })\n      .on('error', (error) => {\n        const err = er(error)\n        j(err)\n      })\n      .on('timeout', () => {\n        req.abort()\n      })\n  }).then(() => {\n    const r = {\n      body,\n      headers,\n      ...m,\n      rawLength,\n      byteLength,\n      parsedBody: null,\n    }\n    return r\n  })\n  return { req, promise }\n}\n\nexport default makeRequest\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').IncomingMessage} http.IncomingMessage\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').ClientRequest} http.ClientRequest\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').IncomingHttpHeaders} http.IncomingHttpHeaders\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').RequestOptions} http.RequestOptions\n */","import erotic from 'erotic'\nimport makeRequest from './make-request'\n\nexport const getFormData = (form = {}) => {\n  const urlEncodedDataPairs = Object.keys(form).reduce((acc, key) => {\n    const v = form[key]\n    const p = `${encodeURIComponent(key)}=${encodeURIComponent(v)}`\n    return [...acc, p]\n  }, [])\n\n  const d = urlEncodedDataPairs.join('&').replace(/%20/g, '+')\n  return d\n}\n\nexport const getData = (type, data) => {\n  switch (type) {\n  case 'json':\n    data = JSON.stringify(data)\n    type = 'application/json'\n    break\n  case 'form':\n    data = getFormData(data)\n    type = 'application/x-www-form-urlencoded'\n    break\n  }\n  return {\n    data,\n    contentType: type,\n  }\n}\n\nexport const exec = async (request, requestOptions,\n  { data, justHeaders, binary, er = erotic(true) },\n) => {\n  const { req, promise } = makeRequest(request, requestOptions, {\n    justHeaders,\n    binary,\n    er,\n  })\n  req.end(data)\n  const res = await promise\n\n  const isJson = isHeadersJson(res.headers)\n\n  if (isJson && res.body) {\n    try {\n      res.parsedBody = JSON.parse(res.body)\n    } catch (e) {\n      const err = er(e)\n      err.response = res.body\n      throw err\n    }\n  }\n\n  return res\n}\n\n/**\n * Check if the returned content-type starts with application/json.\n * @param {!http.IncomingHttpHeaders} headers\n */\nconst isHeadersJson = (headers) => {\n  /**\n   * @suppress {checkTypes}\n   */\n  const contentType = headers['content-type'] || ''\n  return contentType.startsWith('application/json')\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').IncomingHttpHeaders} http.IncomingHttpHeaders\n */","import { request as https } from 'https'\nimport { request as http } from 'http'\nimport { debuglog } from 'util'\nimport erotic from 'erotic'\nimport { parse } from 'url'\nimport { getData, exec } from './lib'\n\nlet ua\ntry {\n  // require in index won't lead to --process_common_js_modules\n  const { 'version': version, 'name': name } = require('../package.json')\n  ua = name == '@rqt/aqt' ? `@rqt/aqt/${version}` : `@rqt/aqt via ${name}/${version}`\n} catch (err) {\n  ua = '@aqt/rqt'\n}\n\nconst LOG = debuglog('aqt')\n\n/**\n * Request a web page and return information including `headers`, `statusCode`, `statusMessage` along with the `body` (which is also parsed if JSON received).\n * @param {string} address The URL such as http://example.com/api.\n * @param {_rqt.AqtOptions} [options] Configuration for requests.\n */\nconst aqt = async (address, options = {}) => {\n  const {\n    data: d,\n    type = 'json',\n    headers: outgoingHeaders = {\n      'User-Agent': `Mozilla/5.0 (Node.JS) ${ua}`,\n    },\n    compress = true,\n    binary = false,\n    justHeaders = false,\n    method,\n    timeout,\n  } = options\n  const er = erotic(true)\n\n  const { hostname, protocol, port, path } = parse(address)\n  const isHttps = protocol === 'https:'\n  const request = isHttps ? https : http\n\n  const opts = {\n    hostname,\n    port,\n    path,\n    headers: {\n      ...outgoingHeaders,\n    },\n    timeout,\n    method,\n  }\n\n  let data\n  if (d) {\n    const _d = getData(type, d)\n      ; ({ data } = _d)\n    const { contentType } = _d\n\n    opts.method = method || 'POST'\n    if (!('Content-Type' in opts.headers)) {\n      opts.headers['Content-Type'] = contentType\n    }\n    if (!('Content-Length' in opts.headers)) {\n      opts.headers['Content-Length'] = Buffer.byteLength(data)\n    }\n  }\n  if (compress && !('Accept-Encoding' in opts.headers)) {\n    opts.headers['Accept-Encoding'] = 'gzip, deflate'\n  }\n\n  const {\n    body, headers, byteLength, statusCode, statusMessage, rawLength,\n    parsedBody,\n  } = await exec(request, opts, {\n    data,\n    justHeaders,\n    binary,\n    er,\n  })\n\n  LOG('%s %s B%s', address, byteLength, `${byteLength != rawLength ? ` (raw ${rawLength} B)` : ''}`)\n\n  /** @type {!_rqt.AqtReturn} */\n  const res = {\n    body: parsedBody ? parsedBody : body,\n    headers,\n    statusCode,\n    statusMessage,\n  }\n  return res\n}\n\nexport default aqt\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').AqtOptions} _rqt.AqtOptions\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').AqtReturn} _rqt.AqtReturn\n */","import aqt from '@rqt/aqt'\n\n/**\n * Request an HTTP page and return the response body as a string.\n * @param {string} address Url such as http://example.com/api.\n * @param {!_rqt.AqtOptions} [options] Options for requests.\n */\nexport const rqt = async (address, options = {}) => {\n  const { body } = await aqt(address, options)\n  /** @type {string} */\n  const r = body\n  return r\n}\n\n/**\n * Request an HTTP page and return the response body as an object.\n * @param {string} address Url such as http://example.com/api.\n * @param {!_rqt.AqtOptions} [options] Options for requests.\n */\nexport const jqt = async (address, options = {}) => {\n  const { body } = await aqt(address, options)\n  /** @type {*} */\n  const r = body\n  return r\n}\n\n/**\n * Request a page and return the body as a buffer.\n * @param {string} address The URL such as http://example.com/api.\n * @param {!_rqt.AqtOptions} [options] Options for requests.\n */\nexport const bqt = async (address, options) => {\n  const c = {\n    ...options,\n    binary: true,\n  }\n  const  { body } = await aqt(address, c)\n  /** @type {!Buffer} */\n  const r = body\n  return r\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('@rqt/aqt').AqtOptions} _rqt.AqtOptions\n */\n\n// /**\n//  * Request a page and return the body as a stream.\n//  * @param {string} address Url such as http://example.com/api\n//  * @param {Options} [config] Options for requests.\n//  * @param {*} [config.data] Optional data to send to the server with the request.\n//  * @param {'form'|'json'} [config.type=\"'json'\"] How to send data: `json` to serialise JSON data and `form` for url-encoded transmission with `json` mode by default. Default `'json'`.\n//  * @param {http.OutgoingHttpHeaders} [config.headers] Headers to use for the request.\n//  * @param {boolean} [config.compress=true] Add the `Accept-Encoding: gzip, deflate` header to indicate to the server that it can send a compressed response. Default `true`.\n//  * @param {string} [config.method] What HTTP method to use in making of the request. When no method is given and `data` is present, defaults to `POST`.\n//  * @param {number} [config.timeout] Timeout after which the request should cancel.\n//  */\n// export const srqt = async (address, config) => {\n//   throw new Error('not implemented')\n//   // config.binary = true\n//   // const  { body } = await arqt(address, config)\n//   // return body\n// }\n","export default querystring\nexport const {\n  decode,\n  encode,\n  escape,\n  parse,\n  stringify,\n  unescape,\n} = querystring","/* start example */\n/**\n * @param {!_idio.Context} ctx\n * @param {string} token\n * @param {string} scope\n * @param {!_idio.GithubUser} user\n */\nexport const defaultFinish = async (ctx, token, scope, user, next) => {\n  ctx.session['token'] = token\n  ctx.session['scope'] = scope\n  ctx.session['user'] = user\n  ctx.redirect('/')\n}\n/* end example */\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('@typedefs/idio').Context} _idio.Context\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../').GithubUser} _idio.GithubUser\n */","import { jqt } from 'rqt'\nimport { stringify } from 'querystring'\nimport { defaultFinish } from './finish'\n\n/**\n * @type {_idio.githubOAuth}\n */\nfunction $github(app, config) {\n  if (!config) throw new Error('Config with at least client_id and client_secret is required.')\n  const {\n    client_id = '',\n    client_secret = '',\n    path = '/auth/github',\n    scope = '',\n    error = (ctx, err, description) => {\n      throw new Error(description)\n    },\n    finish = defaultFinish,\n    session,\n  } = config\n\n  if (!client_id) {\n    console.warn('[github] No client id - the dialog won\\'t work.')\n  }\n  if (!client_secret) {\n    console.warn('[github] No client secret - the redirect won\\'t work.')\n  }\n\n  /**\n   * @type {!_idio.Middleware}\n   */\n  const start = async (ctx) => {\n    let state\n    if (ctx.session) {\n      state = Math.floor(Math.random() * 10000)\n      ctx.session['githib-state'] = state\n      await ctx.session.manuallyCommit()\n    }\n    const redirect_uri = getRedirect(ctx, path)\n    const u = githubDialogUrl({\n      redirect_uri,\n      client_id,\n      scope,\n      state,\n    })\n    ctx.redirect(u)\n  }\n\n  /**\n   * @type {!_idio.Middleware}\n   */\n  const redirect = async (ctx, next) => {\n    const redirect_uri = getRedirect(ctx, path)\n    let state\n    if (ctx.session) {\n      state = ctx.query['state']\n      if (state != ctx.session['githib-state']) {\n        throw new Error('The state is incorrect.')\n      }\n      ctx.session['githib-state'] = null\n      await ctx.session.manuallyCommit()\n    }\n    if (ctx.query['error']) {\n      const e = ctx.query['error']\n      const ed = ctx.query['error_description']\n      // closure bug\n      // const { 'error': e, 'error_description': ed } = ctx.query\n      await error(/** @type {!_goa.Context} */ (ctx), e, ed, next)\n      return\n    }\n    const code = ctx.query['code']\n    if (!code) throw new Error('Code Not Found.')\n\n    const { access_token, scope: s } = await exchange({\n      client_id,\n      client_secret,\n      redirect_uri,\n      code,\n      state,\n    })\n    const data = await getInfo(access_token)\n    await finish(/** @type {!_goa.Context} */ (ctx), access_token, s, data, next)\n  }\n\n  /** @type {!_idio.Middleware} */\n  const mw = async (ctx, next) => {\n    if (ctx.path == path) {\n      if (session) await session(ctx, next)\n      await start(ctx, next)\n    } else if (ctx.path.startsWith(`${path}/redirect`)) {\n      if (session) await session(ctx, next)\n      await redirect(ctx, next)\n    } else return next()\n  }\n  app.use(/** @type {!_goa.Middleware} */ (mw))\n}\n\nexport default $github\n\n/**\n * Gets all available info\n */\nconst getInfo = async (token) => {\n  return await query({\n    token,\n    path: 'user',\n  })\n}\n\n/**\n * Request data from github API.\n * @param {Object} config Options for Query.\n * @param {string} config.token The access token with appropriate permissions.\n * @param {string} config.path The API endpoint.\n * @param {*} config.data The object containing data to query the API with.\n */\nexport const query = async (config) => {\n  const {\n    token,\n    path,\n    data,\n  } = config\n  const url = `https://api.github.com/${path}`\n  const d = stringify(data)\n  const res = await jqt(`${url}?${d}`, {\n    headers: {\n      'Authorization': `token ${token}`,\n      'Accept': 'application/json',\n      'User-Agent': '@idio/github http://github.com/idiocc/github',\n    },\n  })\n  if (res['message']) {\n    throw new Error(res['message'])\n  }\n  return res\n}\n\nconst exchange = async ({\n  code, client_id, client_secret, redirect_uri, state,\n}) => {\n  const data = {\n    'code': code,\n    'redirect_uri': redirect_uri,\n    'client_id': client_id,\n    'client_secret': client_secret,\n    ...(state ? { 'state': state } : {}),\n  }\n  const { 'access_token': access_token, 'scope': scope,\n    'token_type': token_type, 'error': error,\n    'error_description': error_description,\n  } = await jqt('https://github.com/login/oauth/access_token', {\n    data,\n    headers: {\n      'Accept': 'application/json',\n    },\n  })\n  if (error) {\n    const err = new Error(error_description)\n    err.type = error\n    throw err\n  }\n  return { access_token, scope, token_type }\n}\n\nconst githubDialogUrl = ({\n  redirect_uri,\n  client_id,\n  scope,\n  state,\n}) => {\n  const s = stringify({\n    'client_id': client_id,\n    'redirect_uri': redirect_uri,\n    ...(state ? { 'state': state } : {}),\n    ...(scope ? { 'scope': scope } : {}),\n  })\n  return `https://www.github.com/login/oauth/authorize?${s}`\n}\n\nconst getRedirect = ({ protocol, host }, path) => {\n  const parts = [\n    /\\.ngrok\\.io$/.test(host) ? 'https' : protocol,\n    '://',\n    host,\n    path,\n    '/redirect',\n  ]\n  const p = parts.join('')\n  return p\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('@typedefs/idio').Middleware} _idio.Middleware\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('@typedefs/goa').Middleware} _goa.Middleware\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../')} _idio.githubOAuth\n */","import '@externs/goa'\nimport '@externs/idio'\nimport '../types/externs'\nimport '../types/externs/user'\nimport github from './'\n\nmodule.exports = {\n  '_github': github,\n}\n"],
"names":["request","https","http","debuglog","util","getStackSegment","stack","from","oneLine","splitStack","split","undefined","item","length","slice","items","join","getEntryStack","transparent","stackSegment","getCallerFromArguments","args","caller","homedir","os","extractPathRegex","pathRegex","homeDir","cleanStack","pretty","ignoredModules","re","RegExp","source","replace","j","filter","x","pathMatches","match","includes","test","trim","map","m","p1","makeCallback","entryCaller","entryStack","shadow","cb","messageOrError","arguments","errorStack","Error","calleeStackLine","message","isError","stackMessage","stackHeading","Object","assign","e","properties","erotic","parse","url","Writable","stream","pipeError","streamA","streamB","once","emit","Catchment","options","binary","rs","opts","er","proxyError","wrap","_","_caughtData","_promise","Promise","r","on","d","Buffer","concat","indexOf","pipe","chunk","encoding","callback","push","collect","readable","promise","res","createGunzip","zlib","makeRequest","requestOptions","config","justHeaders","req","headers","body","rawLength","byteLength","then","statusMessage","statusCode","destroy","isGzip","contentEncoding","data","error","err","abort","parsedBody","getFormData","form","keys","reduce","urlEncodedDataPairs","acc","key","v","p","encodeURIComponent","exec","end","startsWith","isJson","JSON","response","ua","version","name","require","LOG","aqt","address","type","outgoingHeaders","compress","method","timeout","hostname","protocol","port","path","stringify","contentType","_d","jqt","querystring","defaultFinish","ctx","token","scope","user","session","redirect","getInfo","query","exchange","code","client_id","client_secret","redirect_uri","state","access_token","token_type","error_description","githubDialogUrl","s","getRedirect","host","parts","module","exports","$github","app","description","finish","console","warn","start","Math","floor","random","manuallyCommit","u","next","ed","use","mw"]
}
