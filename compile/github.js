#!/usr/bin/env node
             
const querystring = require('querystring');
const https = require('https');
const http = require('http');
const util = require('util');
const url = require('url');
const os = require('os');
const zlib = require('zlib');
const stream = require('stream');             const w=https.request;const x=http.request;const y=util.debuglog;const z=(a,b=0,c=!1)=>{if(0===b&&!c)return a;a=a.split("\n",c?b+1:void 0);return c?a[a.length-1]:a.slice(b).join("\n")},A=(a,b=!1)=>z(a,2+(b?1:0)),B=a=>{({callee:{caller:a}}=a);return a};const F=os.homedir;const G=/\s+at.*(?:\(|\s)(.*)\)?/,H=/^(?:(?:(?:node|(?:internal\/[\w/]*|.*node_modules\/(?:IGNORED_MODULES)\/.*)?\w+)\.js:\d+:\d+)|native)/,I=F(),J=a=>{const {pretty:b=!1,ignoredModules:c=["pirates"]}={},f=new RegExp(H.source.replace("IGNORED_MODULES",c.join("|")));return a.replace(/\\/g,"/").split("\n").filter(d=>{d=d.match(G);if(null===d||!d[1])return!0;d=d[1];return d.includes(".app/Contents/Resources/electron.asar")||d.includes(".app/Contents/Resources/default_app.asar")?!1:!f.test(d)}).filter(d=>
d.trim()).map(d=>b?d.replace(G,(g,l)=>g.replace(l,l.replace(I,"~"))):d).join("\n")};function K(a,b,c=!1){return function(f){var d=B(arguments),{stack:g}=Error();const l=z(g,2,!0),p=(g=f instanceof Error)?f.message:f;d=[`Error: ${p}`,...null!==d&&a===d||c?[b]:[l,b]].join("\n");d=J(d);return Object.assign(g?f:Error(),{message:p,stack:d})}};function L(a){var {stack:b}=Error();const c=B(arguments);b=A(b,a);return K(c,b,a)};const M=url.parse;const N=stream.Writable;const O=(a,b)=>{b.once("error",c=>{a.emit("error",c)});return b};class P extends N{constructor(a){const {binary:b=!1,rs:c=null,...f}=a||{},{a:d=L(!0),proxyError:g}=a||{},l=(p,m)=>d(m);super(f);this.b=[];this.h=new Promise((p,m)=>{this.on("finish",()=>{let h;b?h=Buffer.concat(this.b):h=this.b.join("");p(h);this.b=[]});this.once("error",h=>{if(-1==h.stack.indexOf("\n"))l`${h}`;else{const v=J(h.stack);h.stack=v;g&&l`${h}`}m(h)});c&&O(this,c).pipe(this)})}_write(a,b,c){this.b.push(a);c()}get c(){return this.h}}
const Q=async(a,b={})=>{({c:a}=new P({rs:a,...b,a:L(!0)}));return await a};const R=zlib.createGunzip;const S=(a,b,c={})=>{const {justHeaders:f,binary:d,a:g=L(!0)}=c;let l,p,m,h,v=0,e=0;c=(new Promise((n,u)=>{l=a(b,async k=>{({headers:p}=k);m={statusMessage:k.statusMessage,statusCode:k.statusCode};if(f)k.destroy();else{var q="gzip"==k.headers["content-encoding"];k.on("data",r=>v+=r.byteLength);k=q?k.pipe(R()):k;h=await Q(k,{binary:d});e=h.length}n()}).on("error",k=>{k=g(k);u(k)}).on("timeout",()=>{l.abort()})})).then(()=>({body:h,headers:p,...m,l:v,byteLength:e,g:null}));return{req:l,c}};const T=(a={})=>Object.keys(a).reduce((b,c)=>{const f=a[c];c=`${encodeURIComponent(c)}=${encodeURIComponent(f)}`;return[...b,c]},[]).join("&").replace(/%20/g,"+"),U=async(a,b,{data:c,justHeaders:f,binary:d,a:g=L(!0)})=>{const {req:l,c:p}=S(a,b,{justHeaders:f,binary:d,a:g});l.end(c);a=await p;if((a.headers["content-type"]||"").startsWith("application/json")&&a.body)try{a.g=JSON.parse(a.body)}catch(m){throw g=g(m),g.response=a.body,g;}return a};let V;try{const {version:a,name:b}=require("../package.json");V="@rqt/aqt"==b?`@rqt/aqt/${a}`:`@rqt/aqt via ${b}/${a}`}catch(a){V="@aqt/rqt"}
const W=y("aqt"),ea=async(a,b={})=>{const {data:c,type:f="json",headers:d={"User-Agent":`Mozilla/5.0 (Node.JS) ${V}`},compress:g=!0,binary:l=!1,justHeaders:p=!1,method:m,timeout:h}=b;b=L(!0);const {hostname:v,protocol:e,port:n,path:u}=M(a),k="https:"===e?w:x,q={hostname:v,port:n,path:u,headers:{...d},timeout:h,method:m};if(c){var r=f;var t=c;switch(r){case "json":t=JSON.stringify(t);r="application/json";break;case "form":t=T(t),r="application/x-www-form-urlencoded"}t={data:t,contentType:r};({data:r}=
t);t=t.contentType;q.method=m||"POST";"Content-Type"in q.headers||(q.headers["Content-Type"]=t);"Content-Length"in q.headers||(q.headers["Content-Length"]=Buffer.byteLength(r))}!g||"Accept-Encoding"in q.headers||(q.headers["Accept-Encoding"]="gzip, deflate");const {body:aa,headers:ba,byteLength:C,statusCode:ca,statusMessage:da,l:D,g:E}=await U(k,q,{data:r,justHeaders:p,binary:l,a:b});W("%s %s B%s",a,C,`${C!=D?` (raw ${D} B)`:""}`);return{body:E?E:aa,headers:ba,statusCode:ca,statusMessage:da}};const X=async(a,b={})=>{({body:a}=await ea(a,b));return a};const Y=querystring.stringify;const fa=async(a,b,c,f)=>{a.session.token=b;a.session.scope=c;a.session.user=f;a.redirect("/")};const ia=async a=>await ha({m:a,path:"user"}),ha=async a=>{var b=a.m;const c=`https://api.github.com/${a.path}`;a=Y(a.data);b=await X(`${c}?${a}`,{headers:{Authorization:`token ${b}`,Accept:"application/json","User-Agent":"@idio/github http://github.com/idiocc/github"}});if(b.message)throw Error(b.message);return b},ja=async({code:a,client_id:b,client_secret:c,f,state:d})=>{const {access_token:g,scope:l,token_type:p,error:m,error_description:h}=await X("https://github.com/login/oauth/access_token",
{data:{code:a,redirect_uri:f,client_id:b,client_secret:c,...d?{state:d}:{}},headers:{Accept:"application/json"}});if(m)throw a=Error(h),a.type=m,a;return{i:g,scope:l,o:p}},ka=({f:a,client_id:b,scope:c,state:f})=>`https://www.github.com/login/oauth/authorize?${Y({client_id:b,redirect_uri:a,...f?{state:f}:{},...c?{scope:c}:{}})}`,Z=({protocol:a,host:b},c)=>[/\.ngrok\.io$/.test(b)?"https":a,"://",b,c,"/redirect"].join("");module.exports={_github:function(a,b){if(!b)throw Error("Config with at least client_id and client_secret is required.");const {client_id:c="",client_secret:f="",path:d="/auth/github",scope:g="",error:l=(e,n,u)=>{throw Error(u);},finish:p=fa,session:m}=b;c||console.warn("[github] No client id - the dialog won't work.");f||console.warn("[github] No client secret - the redirect won't work.");const h=async e=>{if(e.session){var n=Math.floor(1E4*Math.random());e.session["githib-state"]=n;await e.session.j()}n=
ka({f:Z(e,d),client_id:c,scope:g,state:n});e.redirect(n)},v=async(e,n)=>{var u=Z(e,d);let k;if(e.session){k=e.query.state;if(k!=e.session["githib-state"])throw Error("The state is incorrect.");e.session["githib-state"]=null;await e.session.j()}if(e.query.error)await l(e,e.query.error,e.query.error_description,n);else{var q=e.query.code;if(!q)throw Error("Code Not Found.");var {i:r,scope:t}=await ja({client_id:c,client_secret:f,f:u,code:q,state:k});u=await ia(r);await p(e,r,t,u,n)}};a.use(async(e,
n)=>{if(e.path==d)m&&await m(e,n),await h(e,n);else if(e.path.startsWith(`${d}/redirect`))m&&await m(e,n),await v(e,n);else return n()})}};

//# sourceMappingURL=github.js.map